"""Atualizar modelo Entrega com todas as novas colunas e tipos

Revision ID: 68e313ea5a79
Revises: 1ac05a009b27
Create Date: 2025-07-19 16:44:23.464090

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '68e313ea5a79'
down_revision = '1ac05a009b27'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('motoristas')
    op.drop_table('devolucoes')
    op.drop_table('usuarios')
    op.drop_table('comprovantes')
    with op.batch_alter_table('entregas', schema=None) as batch_op:
        batch_op.add_column(sa.Column('CODFILIAL', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('DTFAT', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('DTCARREGAMENTO', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('ROMANEIO', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('TIPOVENDA', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('NUMNOTA', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('NUMPED', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('CODCLI', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('CLIENTE', sa.String(length=200), nullable=False))
        batch_op.add_column(sa.Column('MUNICIPIO', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('UF', sa.String(length=2), nullable=False))
        batch_op.add_column(sa.Column('EMAIL', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('TELCOM', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('EMAIL_1', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('CODFORNECFRETE', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('TRANSPORTADORA', sa.String(length=200), nullable=False))
        batch_op.add_column(sa.Column('VLTOTAL', sa.Float(precision=10, asdecimal=2), nullable=False))
        batch_op.add_column(sa.Column('NUMVOLUME', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('TOTPESO', sa.Float(precision=10, asdecimal=2), nullable=False))
        batch_op.add_column(sa.Column('PRAZOENTREGA', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('CHAVENFE', sa.String(length=44), nullable=False))
        batch_op.add_column(sa.Column('PREVISAOENTREGA', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('DATAFINALIZACAO', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('STATUS', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('DIASATRASO', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('PRAZOMEDIO', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('AGENDAMENTO', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('DEVOLUCAO', sa.Boolean(), nullable=False))
        batch_op.drop_constraint(batch_op.f('entregas_motorista_id_fkey'), type_='foreignkey')
        batch_op.drop_column('nf_numero')
        batch_op.drop_column('motorista_id')
        batch_op.drop_column('data_prevista')
        batch_op.drop_column('data_realizada')
        batch_op.drop_column('status')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('entregas', schema=None) as batch_op:
        batch_op.add_column(sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('data_realizada', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('data_prevista', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('motorista_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('nf_numero', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.create_foreign_key(batch_op.f('entregas_motorista_id_fkey'), 'motoristas', ['motorista_id'], ['id'])
        batch_op.drop_column('DEVOLUCAO')
        batch_op.drop_column('AGENDAMENTO')
        batch_op.drop_column('PRAZOMEDIO')
        batch_op.drop_column('DIASATRASO')
        batch_op.drop_column('STATUS')
        batch_op.drop_column('DATAFINALIZACAO')
        batch_op.drop_column('PREVISAOENTREGA')
        batch_op.drop_column('CHAVENFE')
        batch_op.drop_column('PRAZOENTREGA')
        batch_op.drop_column('TOTPESO')
        batch_op.drop_column('NUMVOLUME')
        batch_op.drop_column('VLTOTAL')
        batch_op.drop_column('TRANSPORTADORA')
        batch_op.drop_column('CODFORNECFRETE')
        batch_op.drop_column('EMAIL_1')
        batch_op.drop_column('TELCOM')
        batch_op.drop_column('EMAIL')
        batch_op.drop_column('UF')
        batch_op.drop_column('MUNICIPIO')
        batch_op.drop_column('CLIENTE')
        batch_op.drop_column('CODCLI')
        batch_op.drop_column('NUMPED')
        batch_op.drop_column('NUMNOTA')
        batch_op.drop_column('TIPOVENDA')
        batch_op.drop_column('ROMANEIO')
        batch_op.drop_column('DTCARREGAMENTO')
        batch_op.drop_column('DTFAT')
        batch_op.drop_column('CODFILIAL')

    op.create_table('comprovantes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('entrega_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('arquivo_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('data_anexo', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['entrega_id'], ['entregas.id'], name=op.f('comprovantes_entrega_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('comprovantes_pkey'))
    )
    op.create_table('usuarios',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('senha_hash', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('tipo', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('data_criacao', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('data_atualizacao', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('usuarios_pkey')),
    sa.UniqueConstraint('email', name=op.f('usuarios_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('devolucoes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('entrega_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('motivo', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('data_retorno', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['entrega_id'], ['entregas.id'], name=op.f('devolucoes_entrega_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('devolucoes_pkey'))
    )
    op.create_table('motoristas',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('ativo', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('motoristas_pkey'))
    )
    # ### end Alembic commands ###
