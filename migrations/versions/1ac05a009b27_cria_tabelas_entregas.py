"""Cria tabelas entregas

Revision ID: 1ac05a009b27
Revises: 002c5e9cf216
Create Date: 2025-07-18 21:07:05.209536

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1ac05a009b27'
down_revision = '002c5e9cf216'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('devolucoes')
    op.drop_table('usuarios')
    op.drop_table('comprovantes')
    op.drop_table('motoristas')
    with op.batch_alter_table('entregas', schema=None) as batch_op:
        batch_op.add_column(sa.Column('nota_fiscal', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('destinatario', sa.String(length=200), nullable=False))
        batch_op.add_column(sa.Column('endereco', sa.String(length=300), nullable=False))
        batch_op.drop_constraint(batch_op.f('entregas_motorista_id_fkey'), type_='foreignkey')
        batch_op.drop_column('nf_numero')
        batch_op.drop_column('motorista_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('entregas', schema=None) as batch_op:
        batch_op.add_column(sa.Column('motorista_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('nf_numero', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.create_foreign_key(batch_op.f('entregas_motorista_id_fkey'), 'motoristas', ['motorista_id'], ['id'])
        batch_op.drop_column('endereco')
        batch_op.drop_column('destinatario')
        batch_op.drop_column('nota_fiscal')

    op.create_table('motoristas',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('motoristas_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('ativo', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='motoristas_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('comprovantes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('entrega_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('arquivo_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('data_anexo', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['entrega_id'], ['entregas.id'], name=op.f('comprovantes_entrega_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('comprovantes_pkey'))
    )
    op.create_table('usuarios',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('senha_hash', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('tipo', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('data_criacao', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('data_atualizacao', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('usuarios_pkey')),
    sa.UniqueConstraint('email', name=op.f('usuarios_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('devolucoes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('entrega_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('motivo', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('data_retorno', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['entrega_id'], ['entregas.id'], name=op.f('devolucoes_entrega_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('devolucoes_pkey'))
    )
    # ### end Alembic commands ###
